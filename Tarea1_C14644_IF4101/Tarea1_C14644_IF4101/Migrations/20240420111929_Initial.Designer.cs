// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tarea1_C14644_IF4101.Models;

#nullable disable

namespace Tarea1C14644IF4101.Migrations
{
    [DbContext(typeof(DbDataContext))]
    [Migration("20240420111929_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Asiento", b =>
                {
                    b.Property<int>("IdAsiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsiento"));

                    b.Property<bool>("DisponibilidadAsiento")
                        .HasColumnType("bit");

                    b.Property<bool>("EstadoAsiento")
                        .HasColumnType("bit");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int");

                    b.Property<int>("NumeroAsiento")
                        .HasColumnType("int");

                    b.HasKey("IdAsiento");

                    b.ToTable("Asientos");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Boleto", b =>
                {
                    b.Property<int>("IdBoleto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBoleto"));

                    b.Property<DateTime>("FechaTiquete")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNumeroAsiento")
                        .HasColumnType("int");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("PrecioBoleto")
                        .HasColumnType("int");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdBoleto");

                    b.HasIndex("IdNumeroAsiento");

                    b.HasIndex("IdRuta");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Boletos");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdBoleto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Horario", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<string>("HorarioText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdRuta");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Parada", b =>
                {
                    b.Property<int>("IdParada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParada"));

                    b.Property<string>("NombreParada")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdParada");

                    b.ToTable("Paradas");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.ParadaRuta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsDestino")
                        .HasColumnType("bit");

                    b.Property<bool>("EsOrigen")
                        .HasColumnType("bit");

                    b.Property<int>("IdParada")
                        .HasColumnType("int");

                    b.Property<int>("IdRuta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdParada");

                    b.HasIndex("IdRuta");

                    b.ToTable("ParadaRutas");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Ruta", b =>
                {
                    b.Property<int>("IdRuta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRuta"));

                    b.Property<int>("CantidadAsientos")
                        .HasColumnType("int");

                    b.Property<string>("CodigoRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kilometros")
                        .HasColumnType("int");

                    b.Property<string>("NombreRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("IdRuta");

                    b.ToTable("Rutas");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasennia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePersona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UsuarioEspecial")
                        .HasColumnType("bit");

                    b.Property<string>("cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjetaCredito")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Boleto", b =>
                {
                    b.HasOne("Tarea1_IF4101_C14644.Models.Asiento", "Asiento")
                        .WithMany()
                        .HasForeignKey("IdNumeroAsiento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea1_IF4101_C14644.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("IdRuta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea1_IF4101_C14644.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asiento");

                    b.Navigation("Ruta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Compra", b =>
                {
                    b.HasOne("Tarea1_IF4101_C14644.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.Horario", b =>
                {
                    b.HasOne("Tarea1_IF4101_C14644.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("IdRuta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ruta");
                });

            modelBuilder.Entity("Tarea1_IF4101_C14644.Models.ParadaRuta", b =>
                {
                    b.HasOne("Tarea1_IF4101_C14644.Models.Parada", "Parada")
                        .WithMany()
                        .HasForeignKey("IdParada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tarea1_IF4101_C14644.Models.Ruta", "Ruta")
                        .WithMany()
                        .HasForeignKey("IdRuta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parada");

                    b.Navigation("Ruta");
                });
#pragma warning restore 612, 618
        }
    }
}
